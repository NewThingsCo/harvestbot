version: 2
jobs:
  test:
    docker:
      - image: circleci/node:9.9.0

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - run: npm run ci:lock:update

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: npm run test

      - run: npm run ci:lock:upload

  build:
    docker:
      - image: circleci/node:9.9.0
    steps:
      - add_ssh_keys:
          fingerprints:
            - 73:b4:4d:e2:33:06:62:72:5b:df:cd:8c:f4:be:d8:cc
      - checkout
      - run: npm install
      - run: npm run build
      - run: |
          git config --global user.email "circleci@harvestbot"
          git config --global user.name "CircleCI"
          git add -f ./build # Update build output
          if git commit -a -m "[skip ci] Update deployable build output."; then
            git push origin master
            # Trigger deployment with updated build output
            curl -u ${CIRCLE_API_PROJECT_TOKEN}: -d build_parameters[CIRCLE_JOB]=deploy https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/tree/$CIRCLE_BRANCH
          fi

  deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - run:
          name: Store Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run: |
          gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
          gcloud --quiet config set project ${GCLOUD_PROJECT}
          gcloud functions deploy ${GCLOUD_FLEXTIME_FUNCTION_NAME} --source ${GCLOUD_REPOSITORY_URL}
          gcloud functions deploy ${GCLOUD_NOTIFY_FUNCTION_NAME} --source ${GCLOUD_REPOSITORY_URL}

  notify:
    docker:
      - image: circleci/node:9.9.0
    steps:
      - run: curl ${GCLOUD_NOTIFY_FUNCTION_URL}

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only: master
  notify:
    triggers:
      - schedule:
          cron: "30 * * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - notify
